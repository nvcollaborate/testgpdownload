// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.testappnongpdownload.app.playstoreapiutils;

@SuppressWarnings("hiding")
public interface Play {

  public static final class RequestContext extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RequestContext[] _emptyArray;
    public static RequestContext[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RequestContext[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .App app = 1;
    public com.testappnongpdownload.app.playstoreapiutils.Play.App[] app;

    public RequestContext() {
      clear();
    }

    public RequestContext clear() {
      app = com.testappnongpdownload.app.playstoreapiutils.Play.App.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.app != null && this.app.length > 0) {
        for (int i = 0; i < this.app.length; i++) {
            com.testappnongpdownload.app.playstoreapiutils.Play.App element = this.app[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.app != null && this.app.length > 0) {
        for (int i = 0; i < this.app.length; i++) {
            com.testappnongpdownload.app.playstoreapiutils.Play.App element = this.app[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public RequestContext mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.app == null ? 0 : this.app.length;
              com.testappnongpdownload.app.playstoreapiutils.Play.App[] newArray =
                new com.testappnongpdownload.app.playstoreapiutils.Play.App[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.app, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.testappnongpdownload.app.playstoreapiutils.Play.App();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.testappnongpdownload.app.playstoreapiutils.Play.App();
            input.readMessage(newArray[i]);
            this.app = newArray;
            break;
          }
        }
      }
    }

    public static RequestContext parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RequestContext(), data);
    }

    public static RequestContext parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RequestContext().mergeFrom(input);
    }
  }

  public static final class App extends
      com.google.protobuf.nano.MessageNano {

    private static volatile App[] _emptyArray;
    public static App[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new App[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional bytes authSubToken = 1;
    public byte[] authSubToken;

    // optional bool isSecure = 2;
    public boolean isSecure;

    // optional int32 version = 3;
    public int version;

    // optional string androidId = 4;
    public String androidId;

    // optional string deviceAndSdkVersion = 5;
    public String deviceAndSdkVersion;

    // optional string userLanguage = 6;
    public String userLanguage;

    // optional string userCountry = 7;
    public String userCountry;

    // optional string operatorAlpha = 8;
    public String operatorAlpha;

    // optional string simOperatorAlpha = 9;
    public String simOperatorAlpha;

    // optional string operatorNumeric = 10;
    public String operatorNumeric;

    // optional string simOperatorNumeric = 11;
    public String simOperatorNumeric;

    public App() {
      clear();
    }

    public App clear() {
      authSubToken = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      isSecure = false;
      version = 0;
      androidId = "";
      deviceAndSdkVersion = "";
      userLanguage = "";
      userCountry = "";
      operatorAlpha = "";
      simOperatorAlpha = "";
      operatorNumeric = "";
      simOperatorNumeric = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!java.util.Arrays.equals(this.authSubToken, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        output.writeBytes(1, this.authSubToken);
      }
      if (this.isSecure != false) {
        output.writeBool(2, this.isSecure);
      }
      if (this.version != 0) {
        output.writeInt32(3, this.version);
      }
      if (!this.androidId.equals("")) {
        output.writeString(4, this.androidId);
      }
      if (!this.deviceAndSdkVersion.equals("")) {
        output.writeString(5, this.deviceAndSdkVersion);
      }
      if (!this.userLanguage.equals("")) {
        output.writeString(6, this.userLanguage);
      }
      if (!this.userCountry.equals("")) {
        output.writeString(7, this.userCountry);
      }
      if (!this.operatorAlpha.equals("")) {
        output.writeString(8, this.operatorAlpha);
      }
      if (!this.simOperatorAlpha.equals("")) {
        output.writeString(9, this.simOperatorAlpha);
      }
      if (!this.operatorNumeric.equals("")) {
        output.writeString(10, this.operatorNumeric);
      }
      if (!this.simOperatorNumeric.equals("")) {
        output.writeString(11, this.simOperatorNumeric);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!java.util.Arrays.equals(this.authSubToken, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(1, this.authSubToken);
      }
      if (this.isSecure != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.isSecure);
      }
      if (this.version != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.version);
      }
      if (!this.androidId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.androidId);
      }
      if (!this.deviceAndSdkVersion.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.deviceAndSdkVersion);
      }
      if (!this.userLanguage.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.userLanguage);
      }
      if (!this.userCountry.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.userCountry);
      }
      if (!this.operatorAlpha.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(8, this.operatorAlpha);
      }
      if (!this.simOperatorAlpha.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(9, this.simOperatorAlpha);
      }
      if (!this.operatorNumeric.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(10, this.operatorNumeric);
      }
      if (!this.simOperatorNumeric.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(11, this.simOperatorNumeric);
      }
      return size;
    }

    @Override
    public App mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.authSubToken = input.readBytes();
            break;
          }
          case 16: {
            this.isSecure = input.readBool();
            break;
          }
          case 24: {
            this.version = input.readInt32();
            break;
          }
          case 34: {
            this.androidId = input.readString();
            break;
          }
          case 42: {
            this.deviceAndSdkVersion = input.readString();
            break;
          }
          case 50: {
            this.userLanguage = input.readString();
            break;
          }
          case 58: {
            this.userCountry = input.readString();
            break;
          }
          case 66: {
            this.operatorAlpha = input.readString();
            break;
          }
          case 74: {
            this.simOperatorAlpha = input.readString();
            break;
          }
          case 82: {
            this.operatorNumeric = input.readString();
            break;
          }
          case 90: {
            this.simOperatorNumeric = input.readString();
            break;
          }
        }
      }
    }

    public static App parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new App(), data);
    }

    public static App parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new App().mergeFrom(input);
    }
  }

  public static final class GetAssetResponse extends
      com.google.protobuf.nano.MessageNano {

    public static final class InstallAsset extends
        com.google.protobuf.nano.MessageNano {

      private static volatile InstallAsset[] _emptyArray;
      public static InstallAsset[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new InstallAsset[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional string assetId = 2;
      public String assetId;

      // optional string assetName = 3;
      public String assetName;

      // optional string assetType = 4;
      public String assetType;

      // optional string assetPackage = 5;
      public String assetPackage;

      // optional string blobUrl = 6;
      public String blobUrl;

      // optional string assetSignature = 7;
      public String assetSignature;

      // optional uint64 assetSize = 8;
      public long assetSize;

      // optional uint64 refundTimeout = 9;
      public long refundTimeout;

      // optional bool forwardLocked = 10;
      public boolean forwardLocked;

      // optional bool secured = 11;
      public boolean secured;

      // optional int32 versionCode = 12;
      public int versionCode;

      // optional string downloadAuthCookieName = 13;
      public String downloadAuthCookieName;

      // optional string downloadAuthCookieValue = 14;
      public String downloadAuthCookieValue;

      public InstallAsset() {
        clear();
      }

      public InstallAsset clear() {
        assetId = "";
        assetName = "";
        assetType = "";
        assetPackage = "";
        blobUrl = "";
        assetSignature = "";
        assetSize = 0L;
        refundTimeout = 0L;
        forwardLocked = false;
        secured = false;
        versionCode = 0;
        downloadAuthCookieName = "";
        downloadAuthCookieValue = "";
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!this.assetId.equals("")) {
          output.writeString(2, this.assetId);
        }
        if (!this.assetName.equals("")) {
          output.writeString(3, this.assetName);
        }
        if (!this.assetType.equals("")) {
          output.writeString(4, this.assetType);
        }
        if (!this.assetPackage.equals("")) {
          output.writeString(5, this.assetPackage);
        }
        if (!this.blobUrl.equals("")) {
          output.writeString(6, this.blobUrl);
        }
        if (!this.assetSignature.equals("")) {
          output.writeString(7, this.assetSignature);
        }
        if (this.assetSize != 0L) {
          output.writeUInt64(8, this.assetSize);
        }
        if (this.refundTimeout != 0L) {
          output.writeUInt64(9, this.refundTimeout);
        }
        if (this.forwardLocked != false) {
          output.writeBool(10, this.forwardLocked);
        }
        if (this.secured != false) {
          output.writeBool(11, this.secured);
        }
        if (this.versionCode != 0) {
          output.writeInt32(12, this.versionCode);
        }
        if (!this.downloadAuthCookieName.equals("")) {
          output.writeString(13, this.downloadAuthCookieName);
        }
        if (!this.downloadAuthCookieValue.equals("")) {
          output.writeString(14, this.downloadAuthCookieValue);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!this.assetId.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.assetId);
        }
        if (!this.assetName.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(3, this.assetName);
        }
        if (!this.assetType.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(4, this.assetType);
        }
        if (!this.assetPackage.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(5, this.assetPackage);
        }
        if (!this.blobUrl.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(6, this.blobUrl);
        }
        if (!this.assetSignature.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(7, this.assetSignature);
        }
        if (this.assetSize != 0L) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64Size(8, this.assetSize);
        }
        if (this.refundTimeout != 0L) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64Size(9, this.refundTimeout);
        }
        if (this.forwardLocked != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(10, this.forwardLocked);
        }
        if (this.secured != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(11, this.secured);
        }
        if (this.versionCode != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(12, this.versionCode);
        }
        if (!this.downloadAuthCookieName.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(13, this.downloadAuthCookieName);
        }
        if (!this.downloadAuthCookieValue.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(14, this.downloadAuthCookieValue);
        }
        return size;
      }

      @Override
      public InstallAsset mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 18: {
              this.assetId = input.readString();
              break;
            }
            case 26: {
              this.assetName = input.readString();
              break;
            }
            case 34: {
              this.assetType = input.readString();
              break;
            }
            case 42: {
              this.assetPackage = input.readString();
              break;
            }
            case 50: {
              this.blobUrl = input.readString();
              break;
            }
            case 58: {
              this.assetSignature = input.readString();
              break;
            }
            case 64: {
              this.assetSize = input.readUInt64();
              break;
            }
            case 72: {
              this.refundTimeout = input.readUInt64();
              break;
            }
            case 80: {
              this.forwardLocked = input.readBool();
              break;
            }
            case 88: {
              this.secured = input.readBool();
              break;
            }
            case 96: {
              this.versionCode = input.readInt32();
              break;
            }
            case 106: {
              this.downloadAuthCookieName = input.readString();
              break;
            }
            case 114: {
              this.downloadAuthCookieValue = input.readString();
              break;
            }
          }
        }
      }

      public static InstallAsset parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new InstallAsset(), data);
      }

      public static InstallAsset parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new InstallAsset().mergeFrom(input);
      }
    }

    private static volatile GetAssetResponse[] _emptyArray;
    public static GetAssetResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new GetAssetResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated group InstallAsset = 1 {
    public com.testappnongpdownload.app.playstoreapiutils.Play.GetAssetResponse.InstallAsset[] installAsset;

    public GetAssetResponse() {
      clear();
    }

    public GetAssetResponse clear() {
      installAsset = com.testappnongpdownload.app.playstoreapiutils.Play.GetAssetResponse.InstallAsset.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.installAsset != null && this.installAsset.length > 0) {
        for (int i = 0; i < this.installAsset.length; i++) {
            com.testappnongpdownload.app.playstoreapiutils.Play.GetAssetResponse.InstallAsset element = this.installAsset[i];
          if (element != null) {
            output.writeGroup(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.installAsset != null && this.installAsset.length > 0) {
        for (int i = 0; i < this.installAsset.length; i++) {
            com.testappnongpdownload.app.playstoreapiutils.Play.GetAssetResponse.InstallAsset element = this.installAsset[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeGroupSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public GetAssetResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 11: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 11);
            int i = this.installAsset == null ? 0 : this.installAsset.length;
              com.testappnongpdownload.app.playstoreapiutils.Play.GetAssetResponse.InstallAsset[] newArray =
                new com.testappnongpdownload.app.playstoreapiutils.Play.GetAssetResponse.InstallAsset[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.installAsset, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.testappnongpdownload.app.playstoreapiutils.Play.GetAssetResponse.InstallAsset();
              input.readGroup(newArray[i], 1);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.testappnongpdownload.app.playstoreapiutils.Play.GetAssetResponse.InstallAsset();
            input.readGroup(newArray[i], 1);
            this.installAsset = newArray;
            break;
          }
        }
      }
    }

    public static GetAssetResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new GetAssetResponse(), data);
    }

    public static GetAssetResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new GetAssetResponse().mergeFrom(input);
    }
  }
}
